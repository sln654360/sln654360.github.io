name: Sync EPG File

on:
  #schedule:
    #- cron: '25 16 * * *' # 北京时间 00:25
    #- cron: '00 17 * * *' # 北京时间 01:00
    #- cron: '05 2 * * *'  # 北京时间 10:05
    #- cron: '45 6 * * *'  # 北京时间 14:45
  workflow_dispatch:

jobs:
  sync-epg:
    runs-on: ubuntu-latest

    env:
      SOURCE_REPO: 'kuke31/xmlgz'
      SOURCE_FILE_PATH: 'e.xml.gz'
      SOURCE_BRANCH: 'main'
      NEW_FILE_NAME: 'e.xml'

    steps:
    - name: Log run time
      run: echo "Workflow started at $(date)"
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Download e.xml.gz from source repository
      run: |
        curl -L --retry 3 --retry-delay 5 -o e.xml.gz https://raw.githubusercontent.com/${{ env.SOURCE_REPO }}/${{ env.SOURCE_BRANCH }}/${{ env.SOURCE_FILE_PATH }}
    - name: Decompress e.xml.gz to e.xml
      run: |
        gunzip -c e.xml.gz > ${{ env.NEW_FILE_NAME }}.new
    - name: Check for file changes
      id: check_changes
      run: |
        if [ -f ${{ env.NEW_FILE_NAME }} ]; then
          if diff ${{ env.NEW_FILE_NAME }} ${{ env.NEW_FILE_NAME }}.new >/dev/null; then
            echo "No changes detected in ${{ env.NEW_FILE_NAME }}"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in ${{ env.NEW_FILE_NAME }}"
            echo "changed=true" >> $GITHUB_OUTPUT
            mv ${{ env.NEW_FILE_NAME }}.new ${{ env.NEW_FILE_NAME }}
          fi
        else
          echo "No existing file, treating as changed"
          echo "changed=true" >> $GITHUB_OUTPUT
          mv ${{ env.NEW_FILE_NAME }}.new ${{ env.NEW_FILE_NAME }}
        fi
    - name: Commit and push changes
      if: steps.check_changes.outputs.changed == 'true'
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add ${{ env.NEW_FILE_NAME }}
        git commit -m "Sync e.xml from e.xml.gz to ${{ env.NEW_FILE_NAME }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
